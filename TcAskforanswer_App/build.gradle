apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':TcAskforanswer-Api')
}

android {
    compileSdkVersion 19
    buildToolsVersion '22.0.1'

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 14

        ndk {
            moduleName "tuanche_validators"
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ['src/main/jni', 'jni/']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

   /* signingConfigs {
        myConfig {
            storeFile file("G:\\")
            storePassword "tuanche1234tuanche"
            keyAlias "tuanche1234tuanche"
            keyPassword "tuanche1234tuanche"
        }
    }*/


    buildTypes {
        release {
//            signingConfig signingConfigs.myConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'

        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }


    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }


    productFlavors {
        qq {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "qq"]
        }
        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }
        lianxiang {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "lianxiang"]
        }
        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }
        sougou {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "sougou"]
        }
        wangyi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wangyi"]
        }
        channelid {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Channel ID"]
        }
        chedashi_360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360_chedashi"]
        }
        oppo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
        }
        jinli {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "jinli"]
        }
    }
}
